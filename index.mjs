// Copyright (c) 2023 The Stdlib Authors. License is Apache-2.0: http://www.apache.org/licenses/LICENSE-2.0
/// <reference types="./index.d.ts" />
import t from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-define-nonenumerable-read-only-property@v0.1.0-esm/index.mjs";import e from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-define-nonenumerable-read-only-accessor@v0.1.0-esm/index.mjs";import s from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-define-nonenumerable-read-write-accessor@v0.1.1-esm/index.mjs";import n from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-has-own-property@v0.1.1-esm/index.mjs";import{isPrimitive as r}from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-positive-number@v0.1.1-esm/index.mjs";import i from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-plain-object@v0.1.0-esm/index.mjs";import o from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-uint32array@v0.1.1-esm/index.mjs";import{isPrimitive as a}from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-boolean@v0.1.1-esm/index.mjs";import p from"https://cdn.jsdelivr.net/gh/stdlib-js/math-base-assert-is-nan@v0.1.1-esm/index.mjs";import d from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-function@v0.1.1-esm/index.mjs";import m from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-constant-function@v0.1.1-esm/index.mjs";import l from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-noop@v0.1.1-esm/index.mjs";import{factory as h}from"https://cdn.jsdelivr.net/gh/stdlib-js/random-base-chisquare@v0.1.0-esm/index.mjs";import{factory as u}from"https://cdn.jsdelivr.net/gh/stdlib-js/random-base-improved-ziggurat@v0.1.0-esm/index.mjs";import g from"https://cdn.jsdelivr.net/gh/stdlib-js/blas-base-gcopy@v0.1.0-esm/index.mjs";import c from"https://cdn.jsdelivr.net/gh/stdlib-js/array-uint32@v0.1.0-esm/index.mjs";import j from"https://cdn.jsdelivr.net/gh/stdlib-js/object-assign@v0.1.0-esm/index.mjs";import v from"https://cdn.jsdelivr.net/gh/stdlib-js/array-to-json@v0.1.0-esm/index.mjs";import f from"https://cdn.jsdelivr.net/gh/stdlib-js/string-format@v0.1.1-esm/index.mjs";import b from"https://cdn.jsdelivr.net/gh/stdlib-js/math-base-special-sqrt@v0.1.0-esm/index.mjs";function y(){var y,w,x,E,T,L,N,O;if(N=!0,0===arguments.length)x=u(T={copy:!1});else if(1===arguments.length)if(i(arguments[0])){if(n(T=arguments[0],"copy")&&!a(T.copy))throw new TypeError(f("invalid option. `%s` option must be a boolean. Option: `%s`.","copy",T.copy));if(n(T,"prng")){if(!d(T.prng))throw new TypeError(f("invalid option. `%s` option must be a pseudorandom number generator function. Option: `%s`.","prng",T.prng));x=u({prng:T.prng})}else{if(n(T,"state")&&!o(T.state))throw new TypeError(f("invalid option. `%s` option must be a Uint32Array. Option: `%s`.","state",T.state));!1===(T=j({},T)).copy?N=!1:T.state&&(T.state=g(T.state.length,T.state,1,new c(T.state.length),1)),T.copy=!1,x=u(T)}}else{if(!r(O=arguments[0]))throw new TypeError(f("invalid argument. First argument must be a positive number or an options object. Value: `%s`.",O));x=u(T={copy:!1})}else{if(!r(O=arguments[0]))throw new TypeError(f("invalid argument. First argument must be a positive number. Value: `%s`.",O));if(!i(T=arguments[1]))throw new TypeError(f("invalid argument. Options argument must be an object. Value: `%s`.",T));if(n(T,"copy")&&!a(T.copy))throw new TypeError(f("invalid option. `%s` option must be a boolean. Option: `%s`.","copy",T.copy));if(n(T,"prng")){if(!d(T.prng))throw new TypeError(f("invalid option. `%s` option must be a pseudorandom number generator function. Option: `%s`.","prng",T.prng));x=u({prng:T.prng})}else{if(n(T,"state")&&!o(T.state))throw new TypeError(f("invalid option. `%s` option must be a Uint32Array. Option: `%s`.","state",T.state));!1===(T=j({},T)).copy?N=!1:T.state&&(T.state=g(T.state.length,T.state,1,new c(T.state.length),1)),T.copy=!1,x=u(T)}}return T&&T.prng?y=void 0===O?h({prng:T.prng}):h(O,{prng:T.prng}):(T.state?w=T.state:(w=x.state,x.state=w),y=void 0===O?h({state:w,copy:!1}):h(O,{state:w,copy:!1})),L=void 0===O?F:q,E=x.PRNG,t(L,"NAME","t"),T&&T.prng?(t(L,"seed",null),t(L,"seedLength",null),s(L,"state",m(null),l),t(L,"stateLength",null),t(L,"byteLength",null),t(L,"toJSON",m(null))):(e(L,"seed",A),e(L,"seedLength",P),s(L,"state",M,R),e(L,"stateLength",V),e(L,"byteLength",G),t(L,"toJSON",U)),t(L,"PRNG",E),L;function A(){return E.seed}function P(){return E.seedLength}function V(){return E.stateLength}function G(){return E.byteLength}function M(){return E.state}function R(t){if(!o(t))throw new TypeError(f("invalid argument. Must provide a Uint32Array. Value: `%s`.",t));N&&(t=g(t.length,t,1,new c(t.length),1)),E.state=t}function U(){var t={type:"PRNG"};return t.name=L.NAME,t.state=v(E.state),t.params=void 0===O?[]:[O],t}function q(){return x()/b(y()/O)}function F(t){return p(t)||t<=0?NaN:x()/b(y(t)/t)}}var w=y();t(w,"factory",y);export{w as default,y as factory};
//# sourceMappingURL=index.mjs.map

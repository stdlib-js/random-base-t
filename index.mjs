import t from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-define-nonenumerable-read-only-property@esm/index.mjs";import e from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-define-nonenumerable-read-only-accessor@esm/index.mjs";import n from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-define-nonenumerable-read-write-accessor@esm/index.mjs";import s from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-has-own-property@esm/index.mjs";import r from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-positive-number@esm/index.mjs";import i from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-plain-object@esm/index.mjs";import o from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-uint32array@esm/index.mjs";import a from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-boolean@esm/index.mjs";import p from"https://cdn.jsdelivr.net/gh/stdlib-js/math-base-assert-is-nan@esm/index.mjs";import d from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-function@esm/index.mjs";import m from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-constant-function@esm/index.mjs";import l from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-noop@esm/index.mjs";import u from"https://cdn.jsdelivr.net/gh/stdlib-js/random-base-chisquare@esm/index.mjs";import h from"https://cdn.jsdelivr.net/gh/stdlib-js/random-base-improved-ziggurat@esm/index.mjs";import g from"https://cdn.jsdelivr.net/gh/stdlib-js/blas-base-gcopy@esm/index.mjs";import c from"https://cdn.jsdelivr.net/gh/stdlib-js/array-uint32@esm/index.mjs";import j from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-copy@esm/index.mjs";import f from"https://cdn.jsdelivr.net/gh/stdlib-js/array-to-json@esm/index.mjs";import b from"https://cdn.jsdelivr.net/gh/stdlib-js/math-base-special-sqrt@esm/index.mjs";var v=t,y=e,w=n,x=s,E=r.isPrimitive,T=i,L=o,N=a.isPrimitive,O=p,A=d,P=m,V=l,G=u.factory,M=h.factory,R=g,U=c,q=j,F=f,J=b;var S=function(){var t,e,n,s,r,i,o,a;if(o=!0,0===arguments.length)n=M(r={copy:!1});else if(1===arguments.length)if(T(arguments[0])){if(x(r=arguments[0],"copy")&&!N(r.copy))throw new TypeError("invalid option. `copy` option must be a boolean. Option: `"+r.copy+"`.");if(x(r,"prng")){if(!A(r.prng))throw new TypeError("invalid option. `prng` option must be a pseudorandom number generator function. Option: `"+r.prng+"`.");n=M({prng:r.prng})}else{if(x(r,"state")&&!L(r.state))throw new TypeError("invalid option. `state` option must be a Uint32Array. Option: `"+r.state+"`.");!1===(r=q(r,1)).copy?o=!1:r.state&&(r.state=R(r.state.length,r.state,1,new U(r.state.length),1)),r.copy=!1,n=M(r)}}else{if(!E(a=arguments[0]))throw new TypeError("invalid argument. First argument must be a positive number or an options object. Value: `"+a+"`.");n=M(r={copy:!1})}else{if(!E(a=arguments[0]))throw new TypeError("invalid argument. First argument must be a positive number. Value: `"+a+"`.");if(!T(r=arguments[1]))throw new TypeError("invalid argument. Options argument must be an object. Value: `"+r+"`.");if(x(r,"copy")&&!N(r.copy))throw new TypeError("invalid option. `copy` option must be a boolean. Option: `"+r.copy+"`.");if(x(r,"prng")){if(!A(r.prng))throw new TypeError("invalid option. `prng` option must be a pseudorandom number generator function. Option: `"+r.prng+"`.");n=M({prng:r.prng})}else{if(x(r,"state")&&!L(r.state))throw new TypeError("invalid option. `state` option must be a Uint32Array. Option: `"+r.state+"`.");!1===(r=q(r,1)).copy?o=!1:r.state&&(r.state=R(r.state.length,r.state,1,new U(r.state.length),1)),r.copy=!1,n=M(r)}}return r&&r.prng?t=void 0===a?G({prng:r.prng}):G(a,{prng:r.prng}):(r.state?e=r.state:(e=n.state,n.state=e),t=void 0===a?G({state:e,copy:!1}):G(a,{state:e,copy:!1})),i=void 0===a?j:c,s=n.PRNG,v(i,"NAME","t"),r&&r.prng?(v(i,"seed",null),v(i,"seedLength",null),w(i,"state",P(null),V),v(i,"stateLength",null),v(i,"byteLength",null),v(i,"toJSON",P(null))):(y(i,"seed",p),y(i,"seedLength",d),w(i,"state",u,h),y(i,"stateLength",m),y(i,"byteLength",l),v(i,"toJSON",g)),v(i,"PRNG",s),i;function p(){return s.seed}function d(){return s.seedLength}function m(){return s.stateLength}function l(){return s.byteLength}function u(){return s.state}function h(t){if(!L(t))throw new TypeError("invalid argument. Must provide a Uint32Array. Value: `"+t+"`.");o&&(t=R(t.length,t,1,new U(t.length),1)),s.state=t}function g(){var t={type:"PRNG"};return t.name=i.NAME,t.state=F(s.state),t.params=void 0===a?[]:[a],t}function c(){return n()/J(t()/a)}function j(e){return O(e)||e<=0?NaN:n()/J(t(e)/e)}},z=S();t(z,"factory",S);var k=z;export{k as default};
